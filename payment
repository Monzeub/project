@app.post("/pay_invoice")
async def pay_invoice(payload: Request):
    
    values_dict = await payload.json()
    
    dbase = sqlite3.connect('API_database.db', isolation_level=None)

    reference_number = dbase.execute('''SELECT Invoice_id FROM Invoice
                        WHERE Client_id = {clientid}
                        AND Paid = {paid}
                        '''.format(clientid =str(values_dict['clientid']),paid = 0))
    
   
    referencenumber = reference_number.fetchall()

    querycard = dbase.execute('''SELECT credit_card_id FROM Credit_card
                            WHERE Client_id = {clientid}
                            '''.format(clientid=str(values_dict['clientid'])))

    query_card = querycard.fetchall()[0][0]

    N = 0 
    Liste = [] 

    while query_card != 0 : 

     A = query_card % 10 
     Liste.insert (N, A)  

     N = N + 1 
     query_card = (query_card - A)/10
     checking_digit = Liste [0]  

    del Liste [0] 

    
    print(checking_digit)

    Last_check = 0 

    for i in Liste : 

      if Liste.index(i) % 2 == 0 : 
            double = i * 2 

            if double >= 9 : 
            
                add = double - 9 
            
            else: 
                  add = double 
            Last_check = Last_check + add 
      else:  
            Last_check = Last_check + i 

      Liste[Liste.index(i)] = 222

    print(Liste)

    Validity = Last_check + checking_digit 

    print(Last_check)

    if Validity % 10 == 0: 

        print("The credit card is valid!") 

        dbase.execute(''' UPDATE Invoice
                    SET Paid = 1
                    WHERE Invoice_id = {Referencenumber}
                    '''.format(Referencenumber = referencenumber))

        return ("Invoices paid")
        
    else:       
        print("The credit card is not valid!")

    dbase.close()
    return True



if _name_ == '_main_':
  uvicorn.run(app, host='127.0.0.1', port=8000)

